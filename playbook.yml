---
- name: "Deploy Mariadb"
  hosts: "{{ tower_env | default([]) }}"
  gather_facts: true
  become: true
  become_method: sudo
  become_user: root

  tasks:

    - name: "Install Mariadb"
      when: inv_install_mariadb | default(false)
      block:
        - name: "Include labocbz.prepare_host"
          tags:
            - "labocbz.prepare_host"
          vars:
            prepare_host__system_users: "{{ inv_prepare_host__mariadb_system_users }}"
          ansible.builtin.include_role:
            name: "labocbz.prepare_host"

        - name: "Include labocbz.add_certificates"
          tags:
            - "labocbz.add_certificates"
          loop: "{{ inv_mariadb_cert_bundles }}"
          loop_control:
            loop_var: bundle
          when: inv_mariadb_cert_bundles is defined
          vars:
            add_certificates__bundle_name: "{{ bundle.name }}"
            add_certificates__bundle_type: "{{ bundle.type }}"
            add_certificates__bundle_src: "{{ bundle.src }}"
            add_certificates__bundle_dest: "{{ bundle.dest }}"
            add_certificates__bundle_src_user: "{{ bundle.src_user }}"
            add_certificates__bundle_src_password: "{{ bundle.src_password }}"
            add_certificates__bundle_dest_user: "{{ bundle.dest_user }}"
            add_certificates__bundle_dest_group: "{{ bundle.dest_group }}"
            add_certificates__bundle_dest_mode: "{{ bundle.dest_mode }}"
          ansible.builtin.include_role:
            name: "labocbz.add_certificates"

        - name: "Include labocbz.install_mariadb"
          tags:
            - "labocbz.install_mariadb"
          vars:
            install_mariadb__confs_path: "{{ inv_install_mariadb__confs_path }}"
            install_mariadb__config_path: "{{ inv_install_mariadb__config_path }}"
            install_mariadb__ssl_path: "{{ inv_install_mariadb__ssl_path }}"
            install_mariadb__log_path: "{{ inv_install_mariadb__log_path }}"
            install_mariadb__port: "{{ inv_install_mariadb__port }}"
            install_mariadb__bind_address: "{{ inv_install_mariadb__bind_address }}"
            install_mariadb__server_id: "{{ inv_install_mariadb__server_id }}"
            install_mariadb__max_connections: "{{ inv_install_mariadb__max_connections }}"
            install_mariadb__innodb_buffer_pool_size: "{{ inv_install_mariadb__innodb_buffer_pool_size }}"
            install_mariadb__general_log_file: "{{ inv_install_mariadb__general_log_file }}"
            install_mariadb__general_log: "{{ inv_install_mariadb__general_log }}"
            install_mariadb__log_error: "{{ inv_install_mariadb__log_error }}"
            install_mariadb__log_bin: "{{ inv_install_mariadb__log_bin }}"
            install_mariadb__expire_logs_days: "{{ inv_install_mariadb__expire_logs_days }}"
            install_mariadb__max_binlog_size: "{{ inv_install_mariadb__max_binlog_size }}"
            install_mariadb__ssl: "{{ inv_install_mariadb__ssl }}"
            install_mariadb__ssl_client_auth: "{{ inv_install_mariadb__ssl_client_auth }}"
            install_mariadb__ssl_ca: "{{ inv_install_mariadb__ssl_ca }}"
            install_mariadb__ssl_cert: "{{ inv_install_mariadb__ssl_cert }}"
            install_mariadb__ssl_key: "{{ inv_install_mariadb__ssl_key }}"
            install_mariadb__charset: "{{ inv_install_mariadb__charset }}"
            install_mariadb__collation: "{{ inv_install_mariadb__collation }}"
            install_mariadb__galera_cluster: "{{ inv_install_mariadb__galera_cluster }}"
            install_mariadb__galera_node_list: "{{ inv_install_mariadb__galera_node_list }}"
            install_mariadb__galera_clustername: "{{ inv_install_mariadb__galera_clustername }}"
            install_mariadb__galera_node_name: "{{ inv_install_mariadb__galera_node_name }}"
            install_mariadb__galera_node_address: "{{ inv_install_mariadb__galera_node_address }}"
            install_mariadb__galera_cluster_seed_host: "{{ inv_install_mariadb__galera_cluster_seed_host }}"
            install_mariadb__secure_root_password: "{{ inv_install_mariadb__secure_root_password }}"
          ansible.builtin.include_role:
            name: "labocbz.install_mariadb"

        - name: "Remove /etc/logrotate.d/mariadb file"
          ansible.builtin.file:
            path: "/etc/logrotate.d/mariadb"
            state: absent

        - name: "Include labocbz.add_logrotate_confs"
          tags:
            - "labocbz.add_logrotate_confs"
          vars:
            add_logrotate_confs__files: "{{ inv_add_logrotate_confs__mariadb_configurations }}"
          when: inv_add_logrotate_confs__mariadb_configurations | default(false)
          ansible.builtin.include_role:
            name: "labocbz.add_logrotate_confs"

- name: "Deploy MaxScale"
  hosts: "{{ tower_env | default([]) }}"
  gather_facts: true
  become: true
  become_method: sudo
  become_user: root

  tasks:

    - name: "Install MaxScale"
      when: inv_install_maxscale | default(false)
      block:
        - name: "Include labocbz.prepare_host"
          tags:
            - "labocbz.prepare_host"
          vars:
            prepare_host__system_users: "{{ inv_prepare_host__maxscale_system_users }}"
          ansible.builtin.include_role:
            name: "labocbz.prepare_host"

        - name: "Include labocbz.add_certificates"
          tags:
            - "labocbz.add_certificates"
          loop: "{{ inv_maxscale_cert_bundles }}"
          loop_control:
            loop_var: bundle
          when: inv_maxscale_cert_bundles is defined
          vars:
            add_certificates__bundle_name: "{{ bundle.name }}"
            add_certificates__bundle_type: "{{ bundle.type }}"
            add_certificates__bundle_src: "{{ bundle.src }}"
            add_certificates__bundle_dest: "{{ bundle.dest }}"
            add_certificates__bundle_src_user: "{{ bundle.src_user }}"
            add_certificates__bundle_src_password: "{{ bundle.src_password }}"
            add_certificates__bundle_dest_user: "{{ bundle.dest_user }}"
            add_certificates__bundle_dest_group: "{{ bundle.dest_group }}"
            add_certificates__bundle_dest_mode: "{{ bundle.dest_mode }}"
          ansible.builtin.include_role:
            name: "labocbz.add_certificates"

        - name: "Include labocbz.install_maxscale"
          tags:
            - "labocbz.install_maxscale"
          vars:
            install_maxscale__admin_login: "{{ inv_install_maxscale__admin_login }}"
            install_maxscale__admin_password: "{{ inv_install_maxscale__admin_password }}"
            install_maxscale__database_user_login: "{{ inv_install_maxscale__database_user_login }}"
            install_maxscale__database_user_password: "{{ inv_install_maxscale__database_user_password }}"
            install_maxscale__mariadb_servers: "{{ inv_install_maxscale__mariadb_servers }}"
            install_maxscale__mariadb_server_ssl: "{{ inv_install_maxscale__mariadb_server_ssl }}"
            install_maxscale__mariadb_server_type: "{{ inv_install_maxscale__mariadb_server_type }}"
            install_maxscale__mariadb_server_ssl_ca: "{{ inv_install_maxscale__mariadb_server_ssl_ca }}"
            install_maxscale__mariadb_server_ssl_client_auth: "{{ inv_install_maxscale__mariadb_server_ssl_client_auth }}"
            install_maxscale__mariadb_server_ssl_cert: "{{ inv_install_maxscale__mariadb_server_ssl_cert }}"
            install_maxscale__mariadb_server_ssl_key: "{{ inv_install_maxscale__mariadb_server_ssl_key }}"
            install_maxscale__mariadb_server_ssl_version: "{{ inv_install_maxscale__mariadb_server_ssl_version }}"
            install_maxscale__mariadb_server_ssl_verify_peer_certificate: "{{ inv_install_maxscale__mariadb_server_ssl_verify_peer_certificate }}"
            install_maxscale__mariadb_server_ssl_verify_peer_host: "{{ inv_install_maxscale__mariadb_server_ssl_verify_peer_host }}"
            install_maxscale__listener_server_port: "{{ inv_install_maxscale__listener_server_port }}"
            install_maxscale__listener_server_address: "{{ inv_install_maxscale__listener_server_address }}"
            install_maxscale__listener_server_ssl: "{{ inv_install_maxscale__listener_server_ssl }}"
            install_maxscale__listener_server_ssl_client_auth: "{{ inv_install_maxscale__listener_server_ssl_client_auth }}"
            install_maxscale__listener_server_ssl_ca: "{{ inv_install_maxscale__listener_server_ssl_ca }}"
            install_maxscale__listener_server_ssl_cert: "{{ inv_install_maxscale__listener_server_ssl_cert }}"
            install_maxscale__listener_server_ssl_key: "{{ inv_install_maxscale__listener_server_ssl_key }}"
            install_maxscale__threads: "{{ inv_install_maxscale__threads }}"
            install_maxscale__admin_enabled: "{{ inv_install_maxscale__admin_enabled }}"
            install_maxscale__admin_gui: "{{ inv_install_maxscale__admin_gui }}"
            install_maxscale__admin_host: "{{ inv_install_maxscale__admin_host }}"
            install_maxscale__admin_port: "{{ inv_install_maxscale__admin_port }}"
            install_maxscale__admin_secure_gui: "{{ inv_install_maxscale__admin_secure_gui }}"
            install_maxscale__admin_ssl_ca: "{{ inv_install_maxscale__admin_ssl_ca }}"
            install_maxscale__admin_ssl_cert: "{{ inv_install_maxscale__admin_ssl_cert }}"
            install_maxscale__admin_ssl_key: "{{ inv_install_maxscale__admin_ssl_key }}"
          ansible.builtin.include_role:
            name: "labocbz.install_maxscale"

        - name: "Include labocbz.add_logrotate_confs"
          tags:
            - "labocbz.add_logrotate_confs"
          vars:
            add_logrotate_confs__files: "{{ inv_add_logrotate_confs__mariadb_configurations }}"
          when: inv_add_logrotate_confs__mariadb_configurations | default(false)
          ansible.builtin.include_role:
            name: "labocbz.add_logrotate_confs"

    - name: "Install Apache2"
      when: inv_install_apache | default(false)
      block:
        - name: "Include labocbz.prepare_host"
          tags:
            - "labocbz.prepare_host"
          vars:
            prepare_host__system_users: "{{ inv_prepare_host__apache_system_users }}"
          ansible.builtin.include_role:
            name: "labocbz.prepare_host"

        - name: "Include labocbz.add_certificates"
          tags:
            - "labocbz.add_certificates"
          loop: "{{ inv_add_apache_confs__configurations_cert_bundles }}"
          loop_control:
            loop_var: bundle
          when: inv_add_apache_confs__configurations_cert_bundles is defined
          vars:
            add_certificates__bundle_name: "{{ bundle.name }}"
            add_certificates__bundle_type: "{{ bundle.type }}"
            add_certificates__bundle_src: "{{ bundle.src }}"
            add_certificates__bundle_dest: "{{ bundle.dest }}"
            add_certificates__bundle_src_user: "{{ bundle.src_user }}"
            add_certificates__bundle_src_password: "{{ bundle.src_password }}"
            add_certificates__bundle_dest_user: "{{ bundle.dest_user }}"
            add_certificates__bundle_dest_group: "{{ bundle.dest_group }}"
            add_certificates__bundle_dest_mode: "{{ bundle.dest_mode }}"
          ansible.builtin.include_role:
            name: "labocbz.add_certificates"

        - name: "Include labocbz.install_apache"
          tags:
            - "labocbz.install_apache"
          vars:
            install_apache__https_listen_port: "{{ inv_install_apache__https_listen_port }}"
            install_apache__http_listen_port: "{{ inv_install_apache__http_listen_port }}"
            install_apache__modules: "{{ inv_install_apache__modules }}"
            install_apache__enable_qos: "{{ inv_install_apache__enable_qos }}"
            install_apache__enable_security: "{{ inv_install_apache__enable_security }}"
            install_apache__security_core_version: "{{ inv_install_apache__security_core_version }}"
            install_apache__remove_all_vhosts: "{{ inv_install_apache__remove_all_vhosts }}"
            install_apache__loglevel: "{{ inv_install_apache__loglevel }}"
            install_apache__security_version: "{{ inv_install_apache__security_version }}"
            install_apache__enable_evasive: "{{ inv_install_apache__enable_evasive }}"
            install_apache__enable_pagespeed: "{{ inv_install_apache__enable_pagespeed }}"
            install_apache__enable_prefork: "{{ inv_install_apache__enable_prefork }}"
          ansible.builtin.include_role:
            name: "labocbz.install_apache"

        - name: "Include labocbz.add_apache_confs"
          tags:
            - "labocbz.add_apache_confs"
          vars:
            add_apache_confs__http_listen_port: "{{ inv_add_apache_confs__http_listen_port }}"
            add_apache_confs__https_listen_port: "{{ inv_add_apache_confs__https_listen_port }}"
            add_apache_confs__ldap_url: "{{ inv_add_apache_confs__ldap_url }}"
            add_apache_confs__ldap_port: "{{ inv_add_apache_confs__ldap_port }}"
            add_apache_confs__ldap_dc: "{{ inv_add_apache_confs__ldap_dc }}"
            add_apache_confs__auth_ldap_url: "{{ inv_add_apache_confs__auth_ldap_url }}"
            add_apache_confs__custom_ldap_base_header: "{{ inv_add_apache_confs__custom_ldap_base_header }}"
            add_apache_confs__webmaster: "{{ inv_add_apache_confs__webmaster }}"
            add_apache_confs__request_body: "{{ inv_add_apache_confs__request_body }}"
            add_apache_confs__security_body_limit: "{{ inv_add_apache_confs__security_body_limit }}"
            add_apache_confs__ssl_files_path: "{{ inv_add_apache_confs__ssl_files_path }}"
            add_apache_confs__conf_path: "{{ inv_add_apache_confs__conf_path }}"
            add_apache_confs__base_document_root: "{{ inv_add_apache_confs__base_document_root }}"
            add_apache_confs__configurations: "{{ inv_add_apache_confs__configurations }}"
          ansible.builtin.include_role:
            name: "labocbz.add_apache_confs"

        - name: "Include labocbz.add_logrotate_confs"
          tags:
            - "labocbz.add_logrotate_confs"
          vars:
            add_logrotate_confs__files: "{{ inv_add_logrotate_confs__apache_configurations }}"
          ansible.builtin.include_role:
            name: "labocbz.add_logrotate_confs"

        - name: "Block all trafic from other hosts on port MaxScale HTTP(S) (disable acces to MaxScale without Apache2)"
          ansible.builtin.iptables:
            chain: "INPUT"
            protocol: "tcp"
            destination_port: "{{ inv_install_maxscale__admin_port }}"
            jump: "DROP"
            source: "! 127.0.0.1"
            comment: "Force external user to use Apache2"
